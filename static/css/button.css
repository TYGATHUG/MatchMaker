/*    start code for the actual button:         */
/*
<!--Next button -->
<div class="svg-wrapper">
	<svg height="40" width="150" xmlns="http://www.w3.org/2000/svg">
		<rect id="shape" height="40" width="150" />
		<div id="text">
			<a href=""><span class="spot"></span>Button 2</a>
		</div>
	</svg>
</div>
*/

/*   
		Spot is the span on the inside of the href that
		fills the parent and makes the hover and link work
		for the entire div
*/

.spot {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
}
/*
		This is the outer svg wrapper that the SVG itself will 
		fill. Multiple svg-wrapper classes can be put side by side.
*/

.svg-wrapper {
	margin-top: 0;
	position: relative;
	width: 150px;
	/*make sure to use same height/width as in the html*/
	/*height: 30px;*/
	display: inline-block;
	border-radius: 3px;
	/*margin-left: 5px;*/
	/*margin-right: 5px*/
}

/* 
		Pushing the text up into the SVG. Without this the
		text would be below the div's.
*/

#text {
	margin-top: -35px;
	text-align: center;
}

#text a {
	color: white;
	text-decoration: none;
	font-weight: 100;
	font-size: 1.1em;
}

@media screen and (min-width: 1024px) {


	/*
		Changing the shape on hover. I change the color of the stroke,
		make it thinner, then set it to again wrap around the entire parent element.
	*/

	.svg-wrapper:hover #shape {
		stroke-dasharray: 50 0;
		stroke-width: 3px;
		stroke-dashoffset: 0;
		stroke: #06D6A0;
	}

	/*
		This is where we define the fill, color, thickness,
		and stroke pattern of the SVG when there is no hover.
		The dasharray and offset together define the line position
		under the words. Here's also where the transition speed is set.
	*/

	#shape {
		stroke-width: 6px;
		fill: transparent;
		stroke: #009FFD;
		stroke-dasharray: 100 400;
		stroke-dashoffset: -215;
		transition: 1s all ease;
	}
}


/*
		Settings Tab
*/

/* Slider buttons */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input {display:none;}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #7AD997;
}

input:focus + .slider {
  box-shadow: 0 0 1px #7AD997;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}


/* Range Slider */
#slidecontainer {
    width: 100%;
}

.rangeslider {
    -webkit-appearance: none;
    width: 100%;
    height: 15px;
    border-radius: 5px;
    background: #d3d3d3;
    outline: none;
    opacity: 0.7;
    -webkit-transition: .2s;
    transition: opacity .2s;
}

.rangeslider:hover {
    opacity: 1;
}

.rangeslider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 25px;
    height: 25px;
    border-radius: 50%;
    background: #4CAF50;
    cursor: pointer;
}

.rangeslider::-moz-range-thumb {
    width: 25px;
    height: 25px;
    border-radius: 50%;
    background: #4CAF50;
    cursor: pointer;
}

#amount-min, #amount-max {
    border:0;
    color:#f6931f;
    font-weight:bold;
    width: 55px;
    display: inline !important;
}

.gender-btn-group {
    max-width: 90%;

}

.slider-range-container {
    max-width: 440px;
    height: 20px;
    margin: auto;
    margin-bottom: 100px;
}
/* Grouping */
.setting-section {
	max-width: 80%;
	margin:auto;
	margin-top: 100px;
    height: 100px;
}

.gender-btn-group {
	height: 35px;
	max-width: 80%;
	margin:auto;
	vertical-align: middle !important;
	margin-top: 11px;
}